% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graded_info.R
\name{graded_info}
\alias{graded_info}
\title{Calculation of the Information Function associated with the
Graded Observed Score.}
\usage{
graded_info(
  out_obscore,
  ncat = 5,
  method = 1,
  brk = NULL,
  scorey = NULL,
  print = 1,
  plot = 0
)
}
\arguments{
\item{out_obscore}{Output from obscore function}

\item{ncat}{# of categories to be used}

\item{method}{= 1 to equal interval on X \cr
= 2 to equal interval on percent}

\item{brk}{Break points to be used or NULL.
This has priority over ncat.}

\item{scorey}{The value of Y   or  0 to length(brk)-1.}

\item{print}{= 1 to print result}

\item{plot}{= 1 to plot information functions\cr
= 2 to plot posterior distribution of theta given Y.}
}
\value{
A list of: \cr
 theta Discrete theta points defined in obscore function. \cr

 info Information function (LO) defined in obscore function. \cr

 infoX Information function associated with X defined in obscore function.
\cr
 infoY Information function associated with Y \cr

 TRFy_t_t
 stdy_t

 Py_t Distribution of Y given theta \cr

 Pt_y Distribution of theta given Y \cr

 meant_y Posterior mean of theta given Y \cr

 stdt_y Posterior std of theta given Y \cr
}
\description{
Calculation of the Information Function associated with the
Graded Observed Score.
}
\details{
The graded score, Y, 0 <= Y <= ncat-1,  will be calculated on the basis of
the (weighted) observed score X as: \cr
 \code{ Y=scorey[ unclass( cut( scorex, brk, include.lowest=TRUE ) ) ]} \cr
That is: \cr
 \code{ if brk[q] < X <= brk[q+1]  then Y = scorey[q] } \cr

Then, the probability distribution of Y given theta will be calculated
by summing the probability distribution of X given theta. \cr
Finally, the information function associated with the graded score Y will be
calculated as the ratio of the slope of TRF of Y squared to the
conditional variance of Y given theta. \cr
The slope of TRF will be calculated numerically.
}
\examples{
# Define the observed score X using the category and the item weights given
# in weightsS21, and calculate the score distribution etc.
out_obscore <- obscore( paramS2, weight=weightS21, npoints=21, print=0 )
# On the basis of the observed score X calculated above using weightS21,
# categorize X into ncat categories to create new score Y.
res <- graded_info( out_obscore, ncat=5, method=1, plot=1 )
res <- graded_info( out_obscore, ncat=9, method=1, plot=1 )

}
